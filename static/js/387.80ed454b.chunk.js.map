{"version":3,"file":"static/js/387.80ed454b.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,GAAAA,GAAH,yHAQJC,EAAMD,EAAAA,GAAAA,IAAH,qIAQHE,EAAOF,EAAAA,GAAAA,GAAH,kFAMJG,EAAMH,EAAAA,GAAAA,EAAH,iE,SCkBhB,EArCa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACGC,EAAAA,EAAAA,GAAUP,GADb,OACVQ,EADU,OAEdJ,EAAQI,EAAKA,MAFC,2CAAH,qDAIbF,GACD,GAAE,CAACN,IAECG,GAKH,SAACR,EAAD,UACGQ,EAAOM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC/BC,EAAYJ,EAAY,0CACSA,GACnC,yEAEJ,OACE,0BACE,UAACZ,EAAD,YACE,SAACD,EAAD,CAAKkB,MAAM,MAAMC,IAAKF,EAAWG,IAAKL,IACrCA,GACD,SAACb,EAAD,UAAMc,QAJAF,EAQb,OAnBI,4CAsBV,C,8LCtCDO,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAU,wBAAyB,CACxDG,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bd,GAA1B,uFACkBO,EAAAA,EAAAA,IAAA,mBAAsBP,GAAM,CACjDU,OAAQ,CACNC,QAASH,EACTO,SAAU,WAJT,cACCH,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBI,GAAzB,uFACkBO,EAAAA,EAAAA,IAAA,mBAAsBP,EAAtB,YAAoC,CACzDU,OAAQ,CACNC,QAASH,EACTO,SAAU,WAJT,cACCH,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhB,GAA5B,uFACkBO,EAAAA,EAAAA,IAAA,mBAAsBP,EAAtB,YAAoC,CACzDU,OAAQ,CACNC,QAASH,EACTO,SAAU,WAJT,cACCH,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBX,EAAAA,EAAAA,IAAA,kBAA6B,CAClDG,OAAQ,CACNC,QAASH,EACTO,SAAU,QACVI,MAAOD,KALN,cACCN,EADD,yBASEA,EAASC,MATX,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 180px;\n  height: 225px;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  width: 180px;\n`;\n\nexport const Des = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from '../services/Api';\nimport { List, Item, Img, Des } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castes, setCast] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      let cast = await fetchCast(movieId);\n      setCast(cast.cast);\n    };\n    getCast();\n  }, [movieId]);\n\n  if (!castes) {\n    return <h2>Cast is not find</h2>;\n  }\n\n  return (\n    <List>\n      {castes.map(({ profile_path, id, name, character }) => {\n        const imageCast = profile_path\n          ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n          : 'https://podkapot.com.ua/static-files/img/html/vizit/search-no-find.png';\n\n        return (\n          <div key={id}>\n            <Item>\n              <Img width=\"150\" src={imageCast} alt={name} />\n              {name}\n              <Des>{character}</Des>\n            </Item>\n          </div>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'fba338e92d7feb991f2d168ce8330321';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovie(id) {\n  const response = await axios.get(`/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchCast(id) {\n  const response = await axios.get(`/3/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchKeyWord(value) {\n  const response = await axios.get(`/3/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: value,\n    },\n  });\n\n  return response.data;\n}\n"],"names":["List","styled","Img","Item","Des","movieId","useParams","useState","castes","setCast","useEffect","getCast","fetchCast","cast","map","profile_path","id","name","character","imageCast","width","src","alt","axios","API_KEY","fetchTrending","params","api_key","response","data","fetchMovie","language","fetchReviews","fetchKeyWord","value","query"],"sourceRoot":""}