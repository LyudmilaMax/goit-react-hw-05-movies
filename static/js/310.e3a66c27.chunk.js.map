{"version":3,"file":"static/js/310.e3a66c27.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAU,wBAAyB,CACxDG,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,GAAM,CACjDL,OAAQ,CACNC,QAASH,EACTQ,SAAU,WAJT,cACCJ,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,YAAoC,CACzDL,OAAQ,CACNC,QAASH,EACTQ,SAAU,WAJT,cACCJ,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,YAAoC,CACzDL,OAAQ,CACNC,QAASH,EACTQ,SAAU,WAJT,cACCJ,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBb,EAAAA,EAAAA,IAAA,kBAA6B,CAClDG,OAAQ,CACNC,QAASH,EACTQ,SAAU,QACVK,MAAOD,KALN,cACCR,EADD,yBASEA,EAASC,MATX,kE,qLC7CMS,EAAOC,EAAAA,GAAAA,KAAH,8CAIJC,EAAQD,EAAAA,GAAAA,MAAH,yCAILE,EAASF,EAAAA,GAAAA,OAAH,yCAING,EAAOH,EAAAA,GAAAA,GAAH,8CAIJI,EAAOJ,EAAAA,GAAAA,GAAH,mEAKJK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,kF,SC8CjB,EAhEe,WACb,OAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,UAAS,MAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FAClBrB,EADkB,UACVc,EAAaQ,IAAI,gBADP,QACmB,GADnB,uBAGpBL,EAAc,MAHM,2CAMGlB,EAAAA,EAAAA,IAAaC,GANhB,OAMhBuB,EANgB,OAOtBN,EAAcM,EAAWC,SACzBZ,EAAeZ,GARO,2CAAH,qDAUrBqB,GACD,GAAE,CAACP,IAgBJ,OACE,iCACE,UAACZ,EAAD,CAAMuB,SAhBO,SAAAC,GACfA,EAAIC,iBACChB,EAAYiB,OAMfb,EADEJ,EACc,CAAEkB,MAAOlB,GAGX,CAAC,GARfmB,EAAAA,OAAAA,QAAe,qBASlB,EAIG,WACE,SAAC1B,EAAD,CACE2B,KAAK,OACL/B,MAAOW,EACPqB,SAAU,SAAAN,GACRd,EAAec,EAAIO,cAAcjC,MAClC,KAEH,SAACK,EAAD,yBAGF,SAACC,EAAD,UACiB,MAAdU,EACG,GACsB,IAAtBA,EAAWkB,OACX,sBACAlB,EAAWmB,KAAI,SAAAC,GAAI,OACjB,SAAC7B,EAAD,WACE,SAACC,EAAD,CAAM6B,GAAE,UAAKD,EAAKzC,IAAM2C,MAAO,CAAEC,KAAMrB,GAAvC,SACGkB,EAAKI,SAFCJ,EAAKzC,GADC,QAU9B,C","sources":["components/services/Api.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'fba338e92d7feb991f2d168ce8330321';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovie(id) {\n  const response = await axios.get(`/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchCast(id) {\n  const response = await axios.get(`/3/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchKeyWord(value) {\n  const response = await axios.get(`/3/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: value,\n    },\n  });\n\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  padding: 16px 4px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n`;\n\nexport const List = styled.ul`\n  margin-left: 24px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 8px;\n  font-size: 18px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchKeyWord } from '../../components/services/Api';\nimport { Notify } from 'notiflix';\nimport { Form, Input, Button, List, Item, Link } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getSearchMovies = async () => {\n      var value = searchParams.get('movie') ?? '';\n      if (!value) {\n        setMoviesList(null);\n        return;\n      }\n      const serchMovie = await fetchKeyWord(value);\n      setMoviesList(serchMovie.results);\n      setSearchValue(value);\n    };\n    getSearchMovies();\n  }, [searchParams]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    if (!searchValue.trim()) {\n      Notify.failure('Please enter movie');\n      return;\n    }\n\n    if (searchValue) {\n      setSearchParams({ movie: searchValue });\n      return;\n    }\n    setSearchParams({});\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          value={searchValue}\n          onChange={evt => {\n            setSearchValue(evt.currentTarget.value);\n          }}\n        ></Input>\n        <Button>Search</Button>\n      </Form>\n\n      <List>\n        {moviesList == null\n          ? ''\n          : moviesList.length === 0\n          ? 'Movies is not found'\n          : moviesList.map(item => (\n              <Item key={item.id}>\n                <Link to={`${item.id}`} state={{ from: location }}>\n                  {item.title}\n                </Link>\n              </Item>\n            ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","fetchTrending","params","api_key","response","data","fetchMovie","id","language","fetchCast","fetchReviews","fetchKeyWord","value","query","Form","styled","Input","Button","List","Item","Link","NavLink","useState","searchValue","setSearchValue","useSearchParams","searchParams","setSearchParams","moviesList","setMoviesList","location","useLocation","useEffect","getSearchMovies","get","serchMovie","results","onSubmit","evt","preventDefault","trim","movie","Notify","type","onChange","currentTarget","length","map","item","to","state","from","title"],"sourceRoot":""}