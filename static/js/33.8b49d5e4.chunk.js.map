{"version":3,"file":"static/js/33.8b49d5e4.chunk.js","mappings":"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","sources":["components/services/Api.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'fba338e92d7feb991f2d168ce8330321';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovie(id) {\n  const response = await axios.get(`/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchCast(id) {\n  const response = await axios.get(`/3/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchKeyWord(value) {\n  const response = await axios.get(`/3/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: value,\n    },\n  });\n\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  padding: 8px 16px;\n  margin-bottom: 16px;\n  text-align: center;\n  line-height: 1.63;\n  font-weight: 500;\n  font-size: 16px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  border-color: orangered;\n  color: black;\n  background: #f5f4fa;\n  box-shadow: rgb(164 156 156) 1px 1px 3px 1px;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: rgba(63, 39, 30, 0.25);\n    color: black;\n  }\n`;\nexport const MovieDiv = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n`;\n\nexport const Title = styled.h1`\n  margin-left: 24px;\n  margin-bottom: 14px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Score = styled.p`\n  margin-left: 24px;\n  margin-bottom: 14px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const Overview = styled.h2`\n  margin-left: 24px;\n  margin-bottom: 14px;\n`;\n\nexport const TextOverview = styled.p`\n  margin-left: 24px;\n  margin-bottom: 14px;\n`;\n\nexport const Genres = styled.h3`\n  margin-left: 24px;\n  margin-bottom: 14px;\n`;\n\nexport const TextGenres = styled.p`\n  margin-left: 24px;\n  margin-bottom: 14px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  margin-left: 8px;\n  padding: 8px 0px;\n`;\n\nexport const TitleAddition = styled.h3`\n  margin-bottom: 14px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n  font-weight: 500;\n  margin-right: 14px;\n  text-decoration: underline;\n  &:hover {\n    color: orangered;\n  }\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useParams, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { fetchMovie } from '../../components/services/Api';\nimport {\n  Button,\n  MovieDiv,\n  Title,\n  Img,\n  Info,\n  Score,\n  Overview,\n  TextOverview,\n  Genres,\n  TextGenres,\n  AdditionalInfo,\n  Link,\n  TitleAddition,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const locationSave = useRef(location);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      let movies = await fetchMovie(movieId);\n      setMovieDetails(movies);\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <h2>Даний фільм відсутній</h2>;\n  }\n\n  let { popularity, poster_path, genres, title, overview } = movieDetails;\n  const genresList = genres.map(genre => genre.name).join(' ');\n  const imageMovie = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://podkapot.com.ua/static-files/img/html/vizit/search-no-find.png';\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          navigate(locationSave.current.state?.from ?? '/');\n        }}\n      >\n        Go back\n      </Button>\n      <MovieDiv>\n        <Img width=\"200\" src={imageMovie} alt={title} />\n        <Info>\n          <Title>{title}</Title>\n          <Score>User score: {Math.ceil(popularity)}%</Score>\n          <Overview>Overview</Overview>\n          <TextOverview>{overview}</TextOverview>\n          <Genres>Genres</Genres>\n          <TextGenres>{genresList}</TextGenres>\n        </Info>\n      </MovieDiv>\n      <AdditionalInfo>\n        <TitleAddition>Additional information: </TitleAddition>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>{<Outlet />}</Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrending","params","api_key","response","data","fetchMovie","id","language","fetchCast","fetchReviews","fetchKeyWord","value","query","Button","styled","MovieDiv","Title","Img","Info","Score","Overview","TextOverview","Genres","TextGenres","AdditionalInfo","TitleAddition","Link","NavLink","movieId","useParams","useState","movieDetails","setMovieDetails","navigate","useNavigate","location","useLocation","locationSave","useRef","useEffect","getMovieDetails","movies","popularity","poster_path","genres","title","overview","genresList","map","genre","name","join","imageMovie","type","onClick","current","state","from","width","src","alt","Math","ceil","to","Suspense","fallback"],"sourceRoot":""}